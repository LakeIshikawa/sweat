buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.2.0'
    }
}

plugins {
    id "co.riiid.gradle" version "0.4.2"
    id 'org.ajoberstar.grgit' version '1.6.0-rc.1'
    id 'org.ajoberstar.release-opinion' version '1.6.0-rc.1'
}

apply plugin: 'org.ajoberstar.grgit'
apply plugin: "org.ajoberstar.release-opinion"
apply plugin: 'maven-publish'

publishing {
    repositories{
        maven{
            url "${project.getProperties().get("publishURL")}"
            credentials{
                username "${System.getenv("USER")}"
                password "${System.getenv("PASS")}"
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId 'sweat-standalone'
            artifact file("build/dist/sweat-${project.version}.zip")
        }
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "maven"

    // Maven
    group = "com.lksoft.sweat"
    version = project.version

    ext {
        appName = "sweat"
        gdxVersion = '1.9.4'
        roboVMVersion = '2.1.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.+'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
        compile "com.badlogicgames.gdx:gdx-ai:$aiVersion"
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        compile project(":core")
        compile "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        compile "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-ios"
    }
}

project(":core") {
    apply plugin: "java"
    apply plugin: 'antlr'

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        antlr "org.antlr:antlr4:4.5.3"
    }
}

project(":tools") {
    apply plugin: "java"

    dependencies {
        compile project(":core")
        compile project(":desktop")
        compile "com.kotcrab.vis:vis-ui:1.2.4"
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}

task clean( dependsOn: [':desktop:clean', 'tools:clean']){
    doLast {
        delete fileTree("build/")
    }
}

task dist(type: Zip, dependsOn: ['clean', ':desktop:dist', 'tools:dist']){
    from (['desktop/build/libs/', 'tools/build/libs/']){
        include('*.jar')
        into('sweat')
    }
    from (['desktop/build/libs/', 'tools/build/libs/']){
        include('*.bat')
    }
    destinationDir file('build/dist/')

    archiveName = "sweat-${project.version}.zip"
}

github {
    owner = 'LakeIshikawa'
    repo = 'sweat'
    token = "${project.getProperties().get("githubToken")}"
    tagName = "v${project.version}"
    targetCommitish = 'master'
    name = "v${project.version}"
    body = """# SWEAT
Last stable release!
"""
    assets = [
            "build/dist/sweat-${project.version}-github.zip"
    ]
}

task prepareGithubRelease(type: Copy) {
    from "build/dist/"
    into "build/dist/"
    include "sweat-${project.version}.zip"
    rename ("sweat-${project.version}.zip",
            "sweat-${project.version}-github.zip")
}

githubRelease.dependsOn(prepareGithubRelease)