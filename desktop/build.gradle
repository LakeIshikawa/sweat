apply plugin: "java"

sourceSets{
    main {
        java.srcDirs = [ "src/", "dev/" ]
    }
    release {
        compileClasspath = sourceSets.main.compileClasspath
        runtimeClasspath = sourceSets.main.runtimeClasspath

        java.srcDirs = [ "src", "../android/assets" ]
    }
}

sourceCompatibility = 1.7

project.ext.mainClassName = "com.lksoft.yugen.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../android/assets");

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task dist(type: Jar) {
    delete("../android/assets/bin")
    delete fileTree(dir: '../android/assets', include:'*.jar')
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}

    manifest {
        attributes 'Main-Class': project.mainClassName
    }

    baseName = "Yugen"

    // Write batch files
    File bat = new File(destinationDir, "yugen.bat")
    bat.write('java -jar ' + archiveName)
}

task distRelease(type: Jar) {
    from files(sourceSets.release.output.classesDir)
    from files(sourceSets.release.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);
 
    manifest {
        attributes 'Main-Class': project.mainClassName
    }

    baseName = "Game"
}

dist.dependsOn classes
distRelease.dependsOn releaseClasses