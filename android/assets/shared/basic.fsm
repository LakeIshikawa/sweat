Params
speed.walk.fwd.x = 6.0
speed.walk.bwd.x = -4.0
speed.jump.up = 11.0

standing.friction.x = 0.6
crouching.friction.x = 0.5
air.gravity.y = -0.4

State idle (S)
	[Enter]
	physics = P:standing
	priority = 0
	anim = A:idle

	// Face
	[Trigger !facingP2()]
	-> turn

	// Walk
	[Trigger 
		1: ctrl
		1: keyhold("F") || keyhold("B")]
	-> walk
	
	// Jump
	[Trigger
		1: ctrl
		1: keyhold("U")]
	-> jumpstart
	
	// Crouch
	[Trigger
		1: ctrl
		1: keyhold("D")]
	-> stand2crouch


State walk (S)
	[Trigger keyhold("F")]
	vel.x = speed.walk.fwd.x * (facing ? -1.0 : 1.0)
	anim = A:walkfwd

	[Trigger keyhold("B")]
	vel.x = speed.walk.bwd.x * (facing ? -1.0 : 1.0)
	anim = A:walkbwd

	// Face
	[Trigger !facingP2()]
	-> turn

	[Trigger !(keyhold("F") || keyhold("B"))]
	-> idle

	// Jump
	[Trigger
		1: ctrl
		1: keyhold("U")]
	-> jumpstart
	
	// Crouch
	[Trigger
		1: ctrl
		1: keyhold("D")]
	-> stand2crouch

State turn (S)
	[Enter]
	anim = A:turn

	[Trigger animCycles == 1]
	facing = !facing
	-> idle

State jumpstart (S)
	[Enter]
	priority = 1
	anim = A:jumpstart

	[Trigger animCycles == 1]
	vel.y = speed.jump.up
	-> jumping

State jumping (A)
	[Enter]
	physics = P:air
	anim = A:jumping

	// Landing
	[Trigger pos.y < 0.0]
	-> landing

State landing (A)
	[Enter]
	anim = A:landing
	
	[Trigger animCycles == 1]
	-> idle

State stand2crouch (C)
	[Enter]
	physics = P:crouching
	priority = 1
	anim = A:stand2crouch

	[Trigger animCycles == 1]
	-> crouching

State crouching (C)
	[Enter]
	anim = A:crouching
	priority = 0

	[Trigger !keyhold("D")]
	-> crouch2stand

State crouch2stand (C)
	[Enter]
	anim = A:crouch2stand

	[Trigger animCycles == 1]
	-> idle
	

// --
// -- Controls definition from any state that allows control
// --
