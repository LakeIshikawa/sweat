Params
speed.walk.fwd.x = 6.0
speed.walk.bwd.x = -4.0
speed.air.fwd.x = 3.0
speed.air.bwd.x = -2.0
speed.jump.up = 15.0
speed.run.fwd.x = 9.0
speed.backhop.x = -9.0
speed.backhop.y = 5.0

standing.friction.x = 0.4
crouching.friction.x = 0.65
air.gravity.y = -0.6

State idle (S)
	[Enter]
	physics = P:standing
	priority = 0
	anim = A:idle
	ctrl = true
	layer = 5

	// Face
	[Trigger !facingP2()]
	-> turn

	// Walk
	[Trigger 
		1: keyhold("F") || keyhold("B")
		1: !(keyhold("F") && keyhold("B"))]
	-> walk
	
	// Jump
	[Trigger keyhold("U")]
	-> jumpstart
	
	// Crouch
	[Trigger keyhold("D")]
	-> stand2crouch


State walk (S)
	[Enter]
	physics = P:none

	[Trigger keyhold("F") && !keyhold("B")]
	vel.x = speed.walk.fwd.x * (facing ? -1.0 : 1.0)
	anim = A:walkfwd

	[Trigger keyhold("B") && !keyhold("F")]
	vel.x = speed.walk.bwd.x * (facing ? -1.0 : 1.0)
	anim = A:walkbwd

	// Face
	[Trigger !facingP2()]
	-> turn

	// Stop walking
	[Trigger 
		1: !(keyhold("F") || keyhold("B"))
		2: keyhold("F") && keyhold("B")]
	-> idle

	// Jump
	[Trigger keyhold("U")]
	-> jumpstart
	
	// Crouch
	[Trigger keyhold("D")]
	-> stand2crouch

State turn (S)
	[Enter]
	anim = A:turn

	[Trigger animCycles == 1]
	facing = !facing
	-> idle

State jumpstart (S)
	[Enter]
	priority = 1
	anim = A:jumpstart

	// Jump up
	[Trigger animCycles == 1 && !(keyhold("F") || keyhold("B"))]
	anim = A:jumping
	vel.y = speed.jump.up
	-> jumping

	// Jump fwd
	[Trigger animCycles == 1 && keyhold("F")]
	anim = A:jumpingFwd
	vel.y = speed.jump.up
	-> jumping

	// Jump bwd
	[Trigger animCycles == 1 && keyhold("B")]
	anim = A:jumpingBwd
	vel.y = speed.jump.up
	-> jumping


State jumping (A)
	[Enter]
	physics = P:air

	// Controls
	[Trigger keyhold("F")]
	vel.x = speed.air.fwd.x * (facing ? -1.0 : 1.0)

	[Trigger keyhold("B")]
	vel.x = speed.air.bwd.x * (facing ? -1.0 : 1.0)

	// Landing
	[Trigger pos.y < 0.0]
	-> landing

State landing (A)
	[Enter]
	anim = A:landing
	
	[Trigger animCycles == 1]
	-> idle

State stand2crouch (C)
	[Enter]
	physics = P:crouching
	priority = 1
	anim = A:stand2crouch

	[Trigger animCycles == 1]
	-> crouching

State crouching (C)
	[Enter]
	anim = A:crouching
	priority = 0

	[Trigger !keyhold("D")]
	-> crouch2stand

State crouch2stand (C)
	[Enter]
	anim = A:crouch2stand

	[Trigger animCycles == 1]
	-> idle
	
State running (S)
	[Enter]
	anim = A:running
	vel.x = speed.run.fwd.x * (facing ? -1.0 : 1.0)

	[Trigger !keyhold("F")]
	->idle

State backhop (S)
	[Enter]
	anim = A:backhop
	vel.x = speed.backhop.x * (facing ? -1.0 : 1.0)
	vel.y = speed.backhop.y
	physics = P:air

	// Landing
	[Trigger pos.y < 0.0]
	-> backhopland

State backhopland (S)
	[Enter]
	anim = A:backhopland

	[Trigger animCycles == 1]
	-> idle
	
State midpunch (S)
	[Enter]
	layer = 6
	anim = A:midpunch
	vel.x = 0.0
	ctrl = false
	// hit = H:midpunch
	
	[Trigger animCycles == 1]
	-> idle

// --
// -- Controls definition from any state that allows control
// --
Stateless
	// Run
	[Trigger ctrl && (stype() == "S") && has(A:running) && C:run]
		-> running
	// Back-hop	
	[Trigger ctrl && (stype() == "S") && has(A:backhop) && C:backhop]
		-> backhop
		
	// Middle-punch
	[Trigger ctrl && (stype() == "S") && has(A:midpunch) && keypress("B1")]
		-> midpunch
		
	// Damage